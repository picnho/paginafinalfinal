// <auto-generated />
using System;
using Gacheta.Entidades.Escafold;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gacheta.Migrations
{
    [DbContext(typeof(ClientesGachetaContext))]
    partial class ClientesGachetaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gacheta.Entidades.Escafold.Cliente", b =>
                {
                    b.Property<int>("NDocumento")
                        .HasColumnType("int")
                        .HasColumnName("N_Documento");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Parqueadero")
                        .HasColumnType("bit");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tipo_Documento");

                    b.HasKey("NDocumento");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.Cuarto", b =>
                {
                    b.Property<int>("NumeroCuarto")
                        .HasColumnType("int")
                        .HasColumnName("Numero_cuarto");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.HasKey("NumeroCuarto")
                        .HasName("PK_Cuarto_1");

                    b.ToTable("Cuarto", (string)null);
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.HistoriaCliente", b =>
                {
                    b.Property<int>("IdHistoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_historia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoria"));

                    b.Property<int>("NDocumento")
                        .HasColumnType("int")
                        .HasColumnName("N_Documento");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("F_entrada");

                    b.Property<DateTime>("FSalida")
                        .HasColumnType("datetime")
                        .HasColumnName("F_salida");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NCuarto")
                        .HasColumnType("int")
                        .HasColumnName("N_cuarto");

                    b.Property<int>("NTLavanderia")
                        .HasColumnType("int")
                        .HasColumnName("N_T_Lavanderia");

                    b.Property<int>("NVisitas")
                        .HasColumnType("int")
                        .HasColumnName("N_visitas");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdHistoria", "NDocumento");

                    b.HasIndex("NDocumento");

                    b.ToTable("Historia_cliente", (string)null);
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.HistoriaCuarto", b =>
                {
                    b.Property<int>("IdHistoriaCuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_historia_cuarto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoriaCuarto"));

                    b.Property<int>("NumeroCuarto")
                        .HasColumnType("int")
                        .HasColumnName("Numero_cuarto");

                    b.Property<int>("NDocumento")
                        .HasColumnType("int")
                        .HasColumnName("N_documento");

                    b.Property<DateTime?>("FechaDesocupado")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_desocupado");

                    b.Property<DateTime?>("FechaOcupado")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_ocupado");

                    b.Property<int>("NServiciosLavanderia")
                        .HasColumnType("int")
                        .HasColumnName("N_servicios_lavanderia");

                    b.Property<DateTime?>("ReservaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("Reserva_fin");

                    b.Property<DateTime?>("ReservaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Reserva_inicio");

                    b.HasKey("IdHistoriaCuarto", "NumeroCuarto", "NDocumento");

                    b.HasIndex("NDocumento");

                    b.HasIndex("NumeroCuarto");

                    b.ToTable("Historia_cuarto", (string)null);
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.SerLavanderium", b =>
                {
                    b.Property<int>("NCuarto")
                        .HasColumnType("int")
                        .HasColumnName("N_Cuarto");

                    b.Property<int>("NumeroServiciosLavanderia")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Servicios_lavanderia");

                    b.HasIndex("NCuarto");

                    b.ToTable("Ser_Lavanderia", (string)null);
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.HistoriaCliente", b =>
                {
                    b.HasOne("Gacheta.Entidades.Escafold.Cliente", "NDocumentoNavigation")
                        .WithMany("HistoriaClientes")
                        .HasForeignKey("NDocumento")
                        .IsRequired()
                        .HasConstraintName("FK_Historia_cliente_Clientes");

                    b.Navigation("NDocumentoNavigation");
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.HistoriaCuarto", b =>
                {
                    b.HasOne("Gacheta.Entidades.Escafold.Cliente", "NDocumentoNavigation")
                        .WithMany("HistoriaCuartos")
                        .HasForeignKey("NDocumento")
                        .IsRequired()
                        .HasConstraintName("FK_Historia_cuarto_Clientes");

                    b.HasOne("Gacheta.Entidades.Escafold.Cuarto", "NumeroCuartoNavigation")
                        .WithMany("HistoriaCuartos")
                        .HasForeignKey("NumeroCuarto")
                        .IsRequired()
                        .HasConstraintName("FK_Historia_cuarto_Cuarto");

                    b.Navigation("NDocumentoNavigation");

                    b.Navigation("NumeroCuartoNavigation");
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.SerLavanderium", b =>
                {
                    b.HasOne("Gacheta.Entidades.Escafold.Cuarto", "NCuartoNavigation")
                        .WithMany()
                        .HasForeignKey("NCuarto")
                        .IsRequired()
                        .HasConstraintName("FK_Ser_Lavanderia_Cuarto");

                    b.Navigation("NCuartoNavigation");
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.Cliente", b =>
                {
                    b.Navigation("HistoriaClientes");

                    b.Navigation("HistoriaCuartos");
                });

            modelBuilder.Entity("Gacheta.Entidades.Escafold.Cuarto", b =>
                {
                    b.Navigation("HistoriaCuartos");
                });
#pragma warning restore 612, 618
        }
    }
}
